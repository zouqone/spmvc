<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
             http://www.springframework.org/schema/beans/spring-beans-3.1.xsd   
             http://www.springframework.org/schema/context    
             http://www.springframework.org/schema/context/spring-context-3.1.xsd   
             http://www.springframework.org/schema/aop    
             http://www.springframework.org/schema/aop/spring-aop-3.1.xsd   
             http://www.springframework.org/schema/tx    
             http://www.springframework.org/schema/tx/spring-tx-3.1.xsd   
             http://www.springframework.org/schema/mvc    
             http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd   
             http://www.springframework.org/schema/context    
             http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<mvc:annotation-driven>
	    <!-- SpringMVC下载器 -->
		<!-- <mvc:message-converters>  
	        <bean class="com.sp.framework" />  
	    </mvc:message-converters>  -->
	</mvc:annotation-driven>  

	<context:annotation-config />

	<!-- SpringMVC拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="*.jsp" />
			<ref bean="localeChangeInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- SpringMVC @controller组件检测,去除掉@Service注解，注意use-default-filters="false"-->
	<context:component-scan base-package="com.mc.app.controller,com.mc.sys.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- SpringMVC3.1 协商视图解析器(即自动根据请求头信息中的contentType选择视图解析器)-->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="ignoreAcceptHeader" value="true" />
		<property name="favorParameter" value="false" />
		<property name="defaultContentType" value="text/html" />
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="xml" value="application/xml" />
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<ref bean="jspViewResolver" />
				<ref bean="freeMarkerViewResolver" />
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<ref bean="jacksonJsonView" />
				<ref bean="xStreamView" />
			</list>
		</property>
	</bean>

	<!-- jstlView视图 -->
	<!--  
	<bean id="jstlView" class="org.springframework.web.servlet.view.JstlView"></bean>
	-->

	<!-- jacksonJsonView视图 -->
	<bean name="jacksonJsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
		<property name="contentType">
			<value>text/html;charset=UTF-8</value>
		</property>
	</bean>

	<!-- XStreamMarshaller XML视图 -->
	<bean id="xStreamView" class="org.springframework.web.servlet.view.xml.MarshallingView">
		<property name="marshaller">
			<bean class="org.springframework.oxm.xstream.XStreamMarshaller" />
		</property>
	</bean>

	<!-- JSP视图解析器 -->
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/jsp/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.JstlView</value>
		</property>
		<!-- 优先级 -->
		<property name="order">
			<value>1</value>
		</property>
	</bean>

	<!-- FreeMarker视图解析器 -->
	<bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix">
			<value>.ftl</value>
		</property>
		<property name="prefix">
			<value>freemarker</value>
		</property>
		<property name="cache">
			<value>true</value>
		</property>
		<property name="order">
			<value>2</value>
		</property>
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.freemarker.FreeMarkerView</value>
		</property>
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="requestContextAttribute" value="request" />
	</bean>

	<!-- FreeMarker配置 -->
	<bean id="freemarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath">
			<value>/freemarker/</value>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">10000000</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="datetime_format">yyyy-MM-dd</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="number_format">#.##</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="whitespace_stripping">true</prop>
			</props>
		</property>
	</bean>

	<!-- velocitly视图解析器 -->
	<!--
		<bean id="velocitlyViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver"> <property
		name="viewClass"> <value>org.springframework.web.servlet.view.velocity.VelocityView</value> </property> <property name="prefix">
		<value>/velocitly/</value> </property> <property name="suffix"> <value>.vm</value> </property> <property name="contentType">
		<value>text/html;charset=utf-8</value> </property> <property name="exposeRequestAttributes"> <value>true</value> </property>
		<property name="exposeSessionAttributes"> <value>true</value> </property> <property name="exposeSpringMacroHelpers">
		<value>true</value> </property> </bean>
	-->

	<!-- velocity配置 -->
	<!--
		<bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer"> <property
		name="resourceLoaderPath"> <value>/velocitly/</value> </property> <property name="velocityProperties"> <props> <prop
		key="file.resource.loader.cache">false</prop> <prop key="directive.foreach.counter.name">loopCounter</prop> <prop
		key="directive.foreach.counter.initial.value">0</prop> <prop key="input.encoding">UTF-8</prop> <prop
		key="output.encoding">UTF-8</prop> </props> </property> </bean>
	-->

	<!-- XSLT View视图 -->
	<!--  
	<bean id="xsltView" class="org.springframework.web.servlet.view.xslt.XsltView"></bean>
	-->

	<!-- XSLT View视图解析器 -->
	<!--
		<bean id="xsltViewResolver" class="org.springframework.web.servlet.view.xslt.XsltViewResolver"> <property name="viewClass">
		<value>org.springframework.web.servlet.view.xslt.XsltView</value> </property> <property name="sourceKey" value="logins">
		<value>logins</value> </property> <property name="prefix"> <value>/xslt/</value> </property> <property name="suffix">
		<value>.xslt</value> </property> </bean>
	-->

	<!-- Tiles视图 -->
	<!--  
	<bean id="tilesView" class="org.springframework.web.servlet.view.tiles.TilesView"></bean>
	-->

	<!-- tiles配置器-->
	<!--
		<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles.TilesConfigurer"> <property name="definitions">
		<list> <value>/WEB-INF/train-def.xml</value> </list> </property> </bean>
	-->

	<!-- SpringMVC文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 解析request的编码 ，Default is ISO-8859-1 -->
		<property name="defaultEncoding">
		    <value>UTF-8</value>
		</property>
		<!-- 设置上传文件最大20MB -->
		<property name="maxUploadSize">
			<value>20971520</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	
	<bean id="webBindingInitializer" 
		class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
	    <property name="validator" ref="validator"/>
	</bean>
	
	<!-- 添加Hibernate-validator支持 -->
	<bean id="validator" 
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认会到classpath下找ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
	</bean>

	<!-- 国际化资源配置 -->
	<bean id="messageSource" 
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:message"/>
        <property name="fileEncodings" value="UTF-8"/>
        <property name="cacheSeconds" value="5"/>
	</bean>

	<!-- 国际化拦截器 -->
	<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"></bean>

	<!-- JSON转换器 -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- XML转换器 -->
	<!--
		<bean id="marshallingConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"> <constructor-arg
		ref="jaxbMarshaller" /> <property name="supportedMediaTypes"> <list> <value>application/xml;charset=UTF-8</value>
		<value>text/html;charset=UTF-8</value> </list> </property> </bean> <bean id="jaxbMarshaller"
		class="org.springframework.oxm.jaxb.Jaxb2Marshaller"> <property name="classesToBeBound"> <list>
		<value>springmvc3.bean.Student</value> <value>springmvc3.bean.StudentList</value> </list> </property> </bean>
	-->

	<!-- 异常处理器 -->
	<!-- <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="/jsp/error/error" />
        <property name="exceptionMappings">
              <props>
                  <prop key="java.lang.Exception">error</prop>
                  <prop key="java.lang.Throwable">/jsp/error/error</prop>
            </props>
        </property>
    </bean> -->
    
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射  -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
    
    

	<!-- 配置静态资源 -->
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/*.css" location="/css/" />
	<mvc:resources mapping="/jsp/**" location="/jsp/" />
	<mvc:resources mapping="/*.jsp" location="/"/>
</beans>